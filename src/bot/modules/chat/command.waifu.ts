import Bot from 'bot';
import { ArgumentType, Command } from 'bot/types';
import MessageHandler from 'bot/components/MessageHandler';
import { parseWaifuKey, getRandomWaifu, getWaifuByParams, WaifuResult } from 'services/waifu-labs';
import { BotError, ArgumentError } from 'util/errors';
import { MessageAttachment } from 'discord.js';
import { createCanvas, loadImage } from 'canvas';

const CANVAS_SIZE = 800;

const cmd: Command<ArgumentType.FullString> = {
  name: 'waifu',
  description: 'Gets a waifu generated by `https://waifulabs.com/`',
  args: { name: 'id', description: 'Waifu id to retrieve -- leave blank for random' },
  execute: async (msg, input) => {
    let waifuData: WaifuResult;
    if (!input) {
      Bot.logger.debug('Fetching waifu...');
      waifuData = await getRandomWaifu();
    } else {
      const { valid, params } = parseWaifuKey(input);
      if (!valid) {
        throw new ArgumentError('Bad id string');
      }
      Bot.logger.debug('Fetching waifu...');
      waifuData = await getWaifuByParams(params);
    }
    if (!waifuData) {
      throw new BotError('Bad waifu data');
    }

    Bot.logger.debug('Drawing waifu...');
    const canvas = createCanvas(CANVAS_SIZE, CANVAS_SIZE);
    const ctx = canvas.getContext('2d');

    const img = await loadImage(waifuData.url);
    ctx.drawImage(img, 0, 0, CANVAS_SIZE, CANVAS_SIZE);

    Bot.logger.debug('Uploading waifu...');
    const attachment = new MessageAttachment(canvas.toBuffer(), 'waifu.png');
    await msg.reply(`||id: \`${waifuData.key}\`||`, { files: [attachment] });
  },
};

MessageHandler.registerCommand(cmd);
